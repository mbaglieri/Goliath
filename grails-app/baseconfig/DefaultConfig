// if(System.properties["${appName}.config.location"]) {
//    grails.config.locations << "file:" +
import org.apache.log4j.*
import grails.plugins.springsecurity.SecurityConfigType
System.properties["${appName}.config.location"]
// }
grails.mime.file.extensions = true // enables the parsing of file extensions   from URLs into the request format
grails.mime.use.accept.header = false
grails.mime.types = [ html: ['text/html','application/xhtml+xml'],
                      xml: ['text/xml', 'application/xml'],
                      text: 'text-plain',
                      js: 'text/javascript',
                      rss: 'application/rss+xml',
                      atom: 'application/atom+xml',
                      css: 'text/css',
                      csv: 'text/csv',
                      all: '*/*',
                      json: ['application/json','text/json'],
                      form: 'application/x-www-form-urlencoded',
                      multipartForm: 'multipart/form-data'
                    ]
// The default codec used to encode data with ${}
grails.views.default.codec="none" // none, html, base64
grails.views.gsp.encoding="UTF-8"
grails.converters.encoding="UTF-8"
// enabled native2ascii conversion of i18n properties files
grails.enable.native2ascii = true
// set per-environment serverURL stem for creating absolute links

environments {
    production {
      //uiperformance.keepOriginals=true
      uiperformance.enabled = false

        //grails.serverURL = "http://www.changeme.com"
    }
    development {
      //uiperformance.keepOriginals=true
      uiperformance.enabled = false


   }

}

// log4j configuration
  log4j = {
        appenders {
            rollingFile name: 'fileLog',
            file: 'logs/full.log',
            maxFileSize: 26214400,
            maxBackupIndex: 10,
            layout: pattern(conversionPattern: '%d{yyyy-MM-dd HH:mm:ss,SSS} %p %c{2} %m%n')
        }
        root {
             error()
             additivity = true
        }
        error  'org.codehaus.groovy.grails.web.servlet',  //  controllers
               'org.codehaus.groovy.grails.web.pages' //  GSP

    debug fileLog:'grails.app'

    warn 'org.mortbay.log'
}
//grails.plugins.springsecurity.rejectIfNoRule = false
grails.plugins.springsecurity.password.algorithm='SHA-256'
// Added by the Spring Security Core plugin:
grails.plugins.springsecurity.userLookup.userDomainClassName = 'ar.com.goliath.User'
grails.plugins.springsecurity.userLookup.authorityJoinClassName = 'ar.com.goliath.UserRole'
grails.plugins.springsecurity.authority.className = 'ar.com.goliath.Role'
grails.plugins.springsecurity.requestMap.className = 'ar.com.goliath.Requestmap'
grails.plugins.springsecurity.securityConfigType = grails.plugins.springsecurity.SecurityConfigType.Requestmap

